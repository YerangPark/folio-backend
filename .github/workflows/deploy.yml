name: Deploy to Raspberry Pi

on:
  push:
    branches:
      - main  # main 브랜치에 푸시할 때마다 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build

      - name: Archive production artifacts
        run: |
          mkdir -p build
          cp -r dist/* build/
        shell: bash

      - name: Upload production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download production artifacts
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Deploy to Raspberry Pi
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # GitHub Secrets에 SSH 키 저장
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}          # 라즈베리파이 유저 이름
          SSH_HOST: ${{ secrets.SSH_HOST }}          # 라즈베리파이 IP 주소
          SSH_PORT: ${{ secrets.SSH_PORT }}          # 기본 포트는 22
          REMOTE_DIR: ${{ secrets.REMOTE_DIR }}            # 배포할 디렉터리 경로

        run: |
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
          scp -P $SSH_PORT -r build/* $SSH_USERNAME@$SSH_HOST:$REMOTE_DIR

      - name: Restart server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}

        run: |
          ssh -p $SSH_PORT $SSH_USERNAME@$SSH_HOST 'pm2 restart all'
